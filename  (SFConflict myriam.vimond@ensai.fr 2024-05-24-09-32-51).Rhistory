devtools::load()
devtools::load_all()
(9 + 12 + 20) / 3
# 2.(a)
## I_within 1.(a)
0.5^2 + 0.5^2 + 4.66667^2 + 1.6666 ** 2 + 6.333**2
20 - 13.66667
# 2.(a)
## I_within 1.(a)
0.5 ** 2 + 0.5 ** 2 + 4.66667 ** 2 + 1.6666 ** 2 + 6.33333 **2
## I_withién 1.(b)
3 ** 2 + 2 ** 2 + 5 ** 2 + 4 ** 2 + 4  ** 2
## I_withién 1.(c)
0.5 ** 2 + 0.5 ** 2 + 1.5 ** 2 + 1.5 ** 2 + 0  ** 2
df_emp <- data.table::data.table("Ancienneté" = c(2, 3, 5, 6, 8), "Salaire" = c(2000, 2100, 3500, 4100, 10000))
dist(df_emp)
?dist
rownames(df_emp) <- c("E1", "E2", "E3", "E4", "E5")
df_emp
dist(df_emp)
dist(df_emp) ** (1 / 2)
dist(df_emp)
dist(df_emp, diag = TRUE)
## La tableau standardisé
?scale()
library(data.table)
## La tableau standardisé
scale(df_emp)
sd(df_emp$Salaire)
## 1.
df_emp <- data.table::data.table("Ancienneté" = c(2, 3, 5, 6, 8), "Salaire" = c(2000, 2100, 3500, 4100, 10000))
## La tableau standardisé
scale(df_emp)
sd(df_emp$Salaire)
df_emp[, Ancienneté := (Ancienneté - mean(Ancienneté)) / sd(Ancienneté)]
df_emp[, Salaire := (Salaire - mean(Salaire)) / sd(Salaire)]
df_emp
## 3. On applique le même algorithme
dist(df_emp, diag = TRUE)
